/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RequestOperationLog,
    RequestOperationLogFromJSON,
    RequestOperationLogToJSON,
} from '../models';

export interface OperationLogPutRequest {
    requestOperationLog: RequestOperationLog;
}

/**
 * OperationLogApi - interface
 * 
 * @export
 * @interface OperationLogApiInterface
 */
export interface OperationLogApiInterface {
    /**
     * 詳細内容
     * @summary 操作ログを送信
     * @param {RequestOperationLog} requestOperationLog 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OperationLogApiInterface
     */
    operationLogPutRaw(requestParameters: OperationLogPutRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;

    /**
     * 詳細内容
     * 操作ログを送信
     */
    operationLogPut(requestParameters: OperationLogPutRequest, initOverrides?: RequestInit): Promise<void>;

}

/**
 * 
 */
export class OperationLogApi extends runtime.BaseAPI implements OperationLogApiInterface {

    /**
     * 詳細内容
     * 操作ログを送信
     */
    async operationLogPutRaw(requestParameters: OperationLogPutRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.requestOperationLog === null || requestParameters.requestOperationLog === undefined) {
            throw new runtime.RequiredError('requestOperationLog','Required parameter requestParameters.requestOperationLog was null or undefined when calling operationLogPut.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/operation-log`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: RequestOperationLogToJSON(requestParameters.requestOperationLog),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 詳細内容
     * 操作ログを送信
     */
    async operationLogPut(requestParameters: OperationLogPutRequest, initOverrides?: RequestInit): Promise<void> {
        await this.operationLogPutRaw(requestParameters, initOverrides);
    }

}
