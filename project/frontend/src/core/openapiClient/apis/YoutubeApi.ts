/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineObject2,
    InlineObject2FromJSON,
    InlineObject2ToJSON,
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200ToJSON,
    InlineResponse2001,
    InlineResponse2001FromJSON,
    InlineResponse2001ToJSON,
} from '../models';

export interface YoutubeOauthPostRequest {
    inlineObject2: InlineObject2;
}

/**
 * YoutubeApi - interface
 * 
 * @export
 * @interface YoutubeApiInterface
 */
export interface YoutubeApiInterface {
    /**
     * 詳細内容
     * @summary 認可画面のURLを取得
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof YoutubeApiInterface
     */
    youtubeOauthAuthorizeGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse200>>;

    /**
     * 詳細内容
     * 認可画面のURLを取得
     */
    youtubeOauthAuthorizeGet(initOverrides?: RequestInit): Promise<InlineResponse200>;

    /**
     * 詳細内容
     * @summary アクセストークンを取得
     * @param {InlineObject2} inlineObject2 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof YoutubeApiInterface
     */
    youtubeOauthPostRaw(requestParameters: YoutubeOauthPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>>;

    /**
     * 詳細内容
     * アクセストークンを取得
     */
    youtubeOauthPost(requestParameters: YoutubeOauthPostRequest, initOverrides?: RequestInit): Promise<void>;

    /**
     * 詳細内容
     * @summary 本人がアップロードした動画一覧を取得
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof YoutubeApiInterface
     */
    youtubeVideosPostRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<InlineResponse2001>>>;

    /**
     * 詳細内容
     * 本人がアップロードした動画一覧を取得
     */
    youtubeVideosPost(initOverrides?: RequestInit): Promise<Array<InlineResponse2001>>;

}

/**
 * 
 */
export class YoutubeApi extends runtime.BaseAPI implements YoutubeApiInterface {

    /**
     * 詳細内容
     * 認可画面のURLを取得
     */
    async youtubeOauthAuthorizeGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse200>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/youtube/oauth/authorize`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse200FromJSON(jsonValue));
    }

    /**
     * 詳細内容
     * 認可画面のURLを取得
     */
    async youtubeOauthAuthorizeGet(initOverrides?: RequestInit): Promise<InlineResponse200> {
        const response = await this.youtubeOauthAuthorizeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 詳細内容
     * アクセストークンを取得
     */
    async youtubeOauthPostRaw(requestParameters: YoutubeOauthPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.inlineObject2 === null || requestParameters.inlineObject2 === undefined) {
            throw new runtime.RequiredError('inlineObject2','Required parameter requestParameters.inlineObject2 was null or undefined when calling youtubeOauthPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/youtube/oauth`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: InlineObject2ToJSON(requestParameters.inlineObject2),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 詳細内容
     * アクセストークンを取得
     */
    async youtubeOauthPost(requestParameters: YoutubeOauthPostRequest, initOverrides?: RequestInit): Promise<void> {
        await this.youtubeOauthPostRaw(requestParameters, initOverrides);
    }

    /**
     * 詳細内容
     * 本人がアップロードした動画一覧を取得
     */
    async youtubeVideosPostRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<InlineResponse2001>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/youtube/videos`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(InlineResponse2001FromJSON));
    }

    /**
     * 詳細内容
     * 本人がアップロードした動画一覧を取得
     */
    async youtubeVideosPost(initOverrides?: RequestInit): Promise<Array<InlineResponse2001>> {
        const response = await this.youtubeVideosPostRaw(initOverrides);
        return await response.value();
    }

}
