/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    VideoType,
    VideoTypeFromJSON,
    VideoTypeFromJSONTyped,
    VideoTypeToJSON,
} from './';

/**
 * 動画比較情報
 * @export
 * @interface VideoComparison
 */
export interface VideoComparison {
    /**
     * 
     * @type {string}
     * @memberof VideoComparison
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof VideoComparison
     */
    memo?: string;
    /**
     * 
     * @type {string}
     * @memberof VideoComparison
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof VideoComparison
     */
    video1Url: string;
    /**
     * 
     * @type {number}
     * @memberof VideoComparison
     */
    video1TimeSt: number;
    /**
     * 
     * @type {VideoType}
     * @memberof VideoComparison
     */
    video1VideoType: VideoType;
    /**
     * 
     * @type {string}
     * @memberof VideoComparison
     */
    video2Url: string;
    /**
     * 
     * @type {number}
     * @memberof VideoComparison
     */
    video2TimeSt: number;
    /**
     * 
     * @type {VideoType}
     * @memberof VideoComparison
     */
    video2VideoType: VideoType;
}

export function VideoComparisonFromJSON(json: any): VideoComparison {
    return VideoComparisonFromJSONTyped(json, false);
}

export function VideoComparisonFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoComparison {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'category') ? undefined : json['category'],
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'video1Url': json['video1Url'],
        'video1TimeSt': json['video1TimeSt'],
        'video1VideoType': VideoTypeFromJSON(json['video1VideoType']),
        'video2Url': json['video2Url'],
        'video2TimeSt': json['video2TimeSt'],
        'video2VideoType': VideoTypeFromJSON(json['video2VideoType']),
    };
}

export function VideoComparisonToJSON(value?: VideoComparison | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'memo': value.memo,
        'title': value.title,
        'video1Url': value.video1Url,
        'video1TimeSt': value.video1TimeSt,
        'video1VideoType': VideoTypeToJSON(value.video1VideoType),
        'video2Url': value.video2Url,
        'video2TimeSt': value.video2TimeSt,
        'video2VideoType': VideoTypeToJSON(value.video2VideoType),
    };
}

